name: Build
on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
          - os: windows-latest
            rid: win-x86
          - os: macos-latest
            rid: osx
          - os: macos-latest
            rid: ios-arm64
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: android-arm64-v8a
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          cd VisualPinball.Engine.Test
          dotnet build VisualPinball.Engine.Test.csproj -c Release -r ${{ matrix.rid }}
      - run: |
          mkdir tmp
          cp -r VisualPinball.Unity/Plugins/${{ matrix.rid }} tmp
      - uses: actions/upload-artifact@v3
        with:
          name: Plugins
          path: tmp

  test:
    name: Unit Test
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: Plugins
          path: VisualPinball.Unity/Plugins
      #- uses: actions/cache@v3
      #  with:
      #   path: VisualPinball.Unity/VisualPinball.Unity.Test/TestProject~/Library
      #   key: Library-Test-Project
      #   restore-keys: |
      #     Library-Test-Project
      #     Library
      - uses: game-ci/unity-test-runner@main
        id: test
        with:
          #unityVersion: "2022.3.10f1"
          projectPath: VisualPinball.Unity/VisualPinball.Unity.Test/TestProject~
          artifactsPath: VisualPinball.Unity/VisualPinball.Unity.Test/TestProject~/artifacts
          testMode: all
          customParameters: -debugCodeOptimization -enableCodeCoverage -burst-disable-compilation -coverageOptions enableCyclomaticComplexity;assemblyFilters:+VisualPinball.Engine;pathFilters:-**/VisualPinball.Engine/Math/Triangulator/**,-**/VisualPinball.Engine/Math/Mesh/** -coverageResultsPath artifacts
      - run: |
          curl -s https://codecov.io/bash | bash -s - -f ${{ steps.test.outputs.artifactsPath }}/TestProject~-opencov/EditMode/TestCoverageResults_0000.xml
      - uses: MirrorNG/nunit-reporter@v1.1.0
        if: always()
        with:
          path: ${{ steps.test.outputs.artifactsPath }}/*.xml
          access-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results
          path: ${{ steps.test.outputs.artifactsPath }}

  dispatch:
    name: Dispatch
    runs-on: ubuntu-latest
    needs: [ test ]
    if: github.repository == 'freezy/VisualPinball.Engine' && github.ref == 'refs/heads/master'
    steps:
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_PAT }}
          event-type: build-complete
          client-payload: '{"artifacts_run_id": "${{ github.run_id }}"}'
